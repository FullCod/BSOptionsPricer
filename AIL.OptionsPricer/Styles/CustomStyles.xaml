<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <!-- ******************************* -->
  <!-- Boolean to Visibility Converter -->
  <!-- ******************************* -->
  <BooleanToVisibilityConverter x:Key="visibilityConverter" />


<!-- ****************************************** -->
  <!-- Global Styles for "FrameworkElement" types -->
  <!-- ****************************************** -->
  <Style TargetType="FrameworkElement"
         x:Key="baseFrameworkElement">
    <Setter Property="Margin"
            Value="4" />
  </Style>
  <Style TargetType="Panel"
         BasedOn="{StaticResource baseFrameworkElement}">
  </Style>
  <Style TargetType="StackPanel"
         BasedOn="{StaticResource baseFrameworkElement}">
  </Style>
  <Style TargetType="TextBlock"
         BasedOn="{StaticResource baseFrameworkElement}">
  </Style>
  <Style TargetType="Image"
         BasedOn="{StaticResource baseFrameworkElement}">
  </Style>

  <!-- ****************************************** -->
  <!-- Gradient Brush for User Control Background -->
  <!-- ****************************************** -->
  <LinearGradientBrush StartPoint="0.5,0"
                       EndPoint="0.5,1"
                       x:Key="screenBackgroundColor">
    <GradientStop Color="Gainsboro"
                  Offset="0" />
    <GradientStop Color="Lavender"
                  Offset="1" />
  </LinearGradientBrush>


  <!-- ******************************** -->
  <!-- User Control Screen Border Style -->
  <!-- ******************************** -->
  <Style TargetType="Border"
         x:Key="screenBorder">
    <Setter Property="Background"
            Value="{StaticResource screenBackgroundColor}" />
    <Setter Property="BorderBrush"
            Value="#FF5F5F5F" />
    <Setter Property="CornerRadius"
            Value="10" />
    <Setter Property="BorderThickness"
            Value="1" />
    <Setter Property="Padding"
            Value="12" />
    <Setter Property="Margin"
            Value="16" />
  </Style>

  <!-- *********************************** -->
  <!-- Drop Shadow for Buttons -->
  <!-- *********************************** -->
  <DropShadowEffect x:Key="buttonShadow"
                    Color="Gray"
                    ShadowDepth="4" />


  <!-- *********************************** -->
  <!-- Drop Shadow for User Controls -->
  <!-- *********************************** -->
  <DropShadowEffect x:Key="screenShadow"
                    Color="Gainsboro"
                    BlurRadius="5"
                    ShadowDepth="8" />


  <!-- ************************** -->
  <!-- User Control Overall Style -->
  <!-- ************************** -->
  <Style TargetType="UserControl"
         x:Key="screenStyle">
    <Setter Property="MinWidth"
            Value="600" />
    <Setter Property="Effect"
            Value="{StaticResource screenShadow}" />
    <!-- Animate Opacity -->
    <Style.Triggers>
      <EventTrigger RoutedEvent="Loaded">
        <BeginStoryboard>
          <Storyboard>
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0"
                             To="1"
                             Duration="00:00:00.4" />
          </Storyboard>
        </BeginStoryboard>
      </EventTrigger>
    </Style.Triggers>
  </Style>

  <!-- ********************************* -->
  <!-- Global Styles for "Control" types -->
  <!-- ********************************* -->
  <Style TargetType="Control"
         x:Key="baseControl">
    <Setter Property="Margin"
            Value="4" />
    <Setter Property="Padding"
            Value="4" />
  </Style>

  <!-- ******************** -->
  <!-- Special  Styles -->
  <!-- ******************** -->
  <Style TargetType="Label"
         x:Key="inverseLabel"
         BasedOn="{StaticResource baseControl}">
    <Setter Property="Foreground"
            Value="White" />
  </Style>

  <Style TargetType="TextBlock"
         x:Key="statusAreaStyle">
    <Setter Property="Margin"
            Value="10,4" />
  </Style>


  <!-- ************* -->
  <!-- Button Styles -->
  <!-- ************* -->
  <Style TargetType="Button"
         x:Key="closeButton"
         BasedOn="{StaticResource baseControl}">
    <Setter Property="Padding"
            Value="4,-2,4,1" />
    <Setter Property="HorizontalAlignment"
            Value="Right" />
    <Setter Property="ToolTip"
            Value="Close this Window" />
  </Style>
  <Style TargetType="Button"
         x:Key="cancelButton"
         BasedOn="{StaticResource baseControl}">
    <Setter Property="Effect"
            Value="{StaticResource buttonShadow}" />
  </Style>
  <Style TargetType="Button"
         x:Key="submitButton"
         BasedOn="{StaticResource cancelButton}">
    <Setter Property="MinWidth"
            Value="85" />
  </Style>
  <Style TargetType="Button"
         x:Key="buttonWithImage">
    <Setter Property="Height"
            Value="24" />
  </Style>

  <!-- *********************************** -->
  <!-- Gradient Brush for Grid Background -->
  <!-- *********************************** -->
  <LinearGradientBrush StartPoint="0.5,0"
                       EndPoint="0.5,1"
                       x:Key="gridBackgroundColor">
    <GradientStop Color="GhostWhite"
                  Offset="0" />
    <GradientStop Color="WhiteSmoke"
                  Offset="1" />
  </LinearGradientBrush>

  <!-- *************** -->
  <!-- Main Grid Style -->
  <!-- *************** -->
  <Style TargetType="Grid"
         x:Key="gridMainStyle">
    <Setter Property="Background"
            Value="{StaticResource gridBackgroundColor}" />
  </Style>

  <!-- **************************** -->
  <!-- Validation Area  Styles -->
  <!-- **************************** -->
  <Style TargetType="ListBox"
         x:Key="validationArea"
         BasedOn="{StaticResource baseControl}">
    <Setter Property="BorderBrush"
            Value="Red" />
    <Setter Property="BorderThickness"
            Value="2" />
  </Style>

  <Style TargetType="{x:Type TextBox}">
    <Setter Property="Validation.ErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <DockPanel>
            <Grid DockPanel.Dock="Right" Width="16" Height="16" VerticalAlignment="Center" Margin="3 0 0 0">
              <Ellipse Width="16" Height="16" Fill="Red"/>
              <Ellipse Width="3" Height="8" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 2 0 0" Fill="White"/>
              <Ellipse Width="2" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0 0 0 2" Fill="White"/>
            </Grid>
            <Border BorderBrush="Red" BorderThickness="2" CornerRadius="2">
              <AdornedElementPlaceholder/>
            </Border>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Validation.HasError" Value="true">
        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type PasswordBox}">
    <Setter Property="Validation.ErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <DockPanel>
            <Grid DockPanel.Dock="Right" Width="16" Height="16" VerticalAlignment="Center" Margin="3 0 0 0">
              <Ellipse Width="16" Height="16" Fill="Red"/>
              <Ellipse Width="3" Height="8" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 2 0 0" Fill="White"/>
              <Ellipse Width="2" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0 0 0 2" Fill="White"/>
            </Grid>
            <Border BorderBrush="Red" BorderThickness="2" CornerRadius="2">
              <AdornedElementPlaceholder/>
            </Border>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Validation.HasError" Value="true">
        <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>
